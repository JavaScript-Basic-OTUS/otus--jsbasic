import { useEffect, useState } from "react";

// 1. –ù–µ –ø–µ—Ä–µ–¥–∞—Ç—å –Ω–∏—á–µ–≥–æ
function UseEffectPage1() {
  const [, setValue] = useState({});

  useEffect(() => {
    // –≠—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –∏ –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ.
    console.log("–°—Ä–∞–±–∞—Ç—ã–≤–∞—é –Ω–∞ –∫–∞–∂–¥—ã–π —Ä–µ–Ω–¥–µ—Ä");
  });

  return (
    <div>
      <h1>useEffect</h1>
      <button onClick={() => setValue({})}>–û–±–Ω–æ–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ</button>
    </div>
  );
}

// 2. –ü–µ—Ä–µ–¥–∞—Ç—å –ø—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ - []
function UseEffectPage2() {
  const [count, setCount] = useState(0);

  useEffect(() => {
    // –≠—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞.
    console.log("–°—Ä–∞–±–æ—Ç–∞—é 1 —Ä–∞–∑");
  }, []);

  return (
    <div>
      <h1>useEffect</h1>
      <h3>{count}</h3>
      <button onClick={() => setCount((prev) => prev + 1)}> + 1</button>
    </div>
  );
}

// 3. –ü–µ—Ä–µ–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ —Å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è - [value]
function UseEffectPage3({ userId = 2 }) {
  const [user, setUser] = useState(null);
  const [isLoading, setIsLoading] = useState(false);

  // –≠—Ñ—Ñ–µ–∫—Ç, –∑–∞–≤–∏—Å—è—â–∏–π –æ—Ç userId
  useEffect(() => {
    if (!userId) return;

    console.log("–°—Ä–∞–±–æ—Ç–∞—é –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ userId");

    fetch(`https://jsonplaceholder.typicode.com/users/${userId}`)
      .then((response) => response.json)
      .then((json) => setUser(json))
      .catch((error) => console.error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:", error))
      .finally(() => setIsLoading(false));
  }, [userId]); // –ó–∞–ø—É—Å–∫–∞–µ—Ç—Å—è –∑–∞–Ω–æ–≤–æ, –µ—Å–ª–∏ –∏–∑–º–µ–Ω–∏–ª—Å—è userId

  if (isLoading) return <div>–ó–∞–≥—Ä—É–∑–∫–∞...</div>;
  if (!user) return <div>–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è</div>;

  return (
    <div>
      <h1>useEffect</h1>
      <h3>{user.name}</h3>
      <p>{user.email}</p>
    </div>
  );
}

// 4. –ü—Ä–∏–º–µ—Ä –æ—á–∏—Å—Ç–∫–∏ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∏–Ω—Ç–µ—Ä–≤–∞–ª–æ–º
function UseEffectPage() {
  const [time, setTime] = useState(new Date().toLocaleTimeString());

  useEffect(() => {
    console.log("‚úÖ –¢–∞–π–º–µ—Ä –∑–∞–ø—É—â–µ–Ω");

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
    const intervalId = setInterval(() => {
      const currentTime = new Date().toLocaleTimeString();
      setTime(currentTime);
      console.log("üïí –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–æ:", currentTime);
    }, 1000);

    // –§—É–Ω–∫—Ü–∏—è –æ—á–∏—Å—Ç–∫–∏
    return () => {
      console.log("–¢–∞–π–º–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω");
      clearInterval(intervalId);
    };
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ - —ç—Ñ—Ñ–µ–∫—Ç —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏/—Ä–∞–∑–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  return (
    <div>
      <h3>–¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {time}</h3>
    </div>
  );
}

export default UseEffectPage;
